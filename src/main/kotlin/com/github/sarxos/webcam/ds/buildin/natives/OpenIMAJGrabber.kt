/**
 * Copyright (c) 2011, The University of Southampton and the individual contributors.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * * 	Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * *	Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * *	Neither the name of the University of Southampton nor the names of its
 * contributors may be used to endorse or promote products derived from this
 * software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.github.sarxos.webcam.ds.buildin.natives

import org.bridj.BridJ
import org.bridj.Platform
import org.bridj.Pointer
import org.bridj.ann.Field
import org.bridj.ann.Library
import org.bridj.ann.Runtime
import org.bridj.cpp.CPPObject
import org.bridj.cpp.CPPRuntime
import java.io.File

/**
 * *native declaration : line 1*<br></br>
 * This file was autogenerated by [JNAerator](http://jnaerator.googlecode.com/),<br></br>
 * a tool written by [Olivier Chafik](http://ochafik.free.fr/) that
 * [uses a few opensource
 * projects.](http://code.google.com/p/jnaerator/wiki/CreditsAndLicense).<br></br>
 * For help, please visit [NativeLibs4Java](http://nativelibs4java.googlecode.com/) or
 * [BridJ](http://bridj.googlecode.com/) .
 */
@Library("OpenIMAJGrabber")
@Runtime(CPPRuntime::class)
class OpenIMAJGrabber : CPPObject {
    constructor() : super() {}
    constructor(pointer: Pointer<out CPPObject>?) : super(pointer) {}

    val videoDevices: Pointer<DeviceList?>?
        external get
    val image: Pointer<Byte?>?
        external get

    external fun nextFrame(): Int
    external fun setTimeout(timeout: Int)
    external fun startSession(width: Int, height: Int, reqMillisPerFrame: Int): Boolean
    external fun startSession(width: Int, height: Int, reqMillisPerFrame: Int, devptr: Pointer<Device?>?): Boolean
    external fun stopSession()
    val width: Int
        external get
    val height: Int
        external get

    // / C type : void*
    @Field(0)
    protected fun data(): Pointer<*> {
        return io.getPointerField<Any>(this, 0)
    }

    // / C type : void*
    @Field(0)
    protected fun data(data: Pointer<*>?): OpenIMAJGrabber {
        io.setPointerField(this, 0, data)
        return this
    }

    companion object {
        init {
            println("ya boi kiet is here")
            val path = File(".")
            println(path.absolutePath)
            println(path.absoluteFile)
            println(path.listFiles()?.toList())
            Platform.addEmbeddedLibraryResourceRoot("com/github/sarxos/webcam/ds/buildin/lib/")
            BridJ.register()
        }
    }
}