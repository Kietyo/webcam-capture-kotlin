/**
 * Copyright (c) 2011, The University of Southampton and the individual contributors.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * * 	Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * *	Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * *	Neither the name of the University of Southampton nor the names of its
 * contributors may be used to endorse or promote products derived from this
 * software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package com.github.sarxos.webcam.ds.buildin.natives

import org.bridj.Pointer
import org.bridj.ann.Field
import org.bridj.ann.Library
import org.bridj.cpp.CPPObject

/**
 * *native declaration : line 1*<br></br>
 * This file was autogenerated by [JNAerator](http://jnaerator.googlecode.com/),<br></br>
 * a tool written by [Olivier Chafik](http://ochafik.free.fr/) that
 * [uses a
 * few opensource projects.](http://code.google.com/p/jnaerator/wiki/CreditsAndLicense).<br></br>
 * For help, please visit [NativeLibs4Java](http://nativelibs4java.googlecode.com/) or [BridJ](http://bridj.googlecode.com/) .
 */
@Library("OpenIMAJGrabber")
class DeviceList : CPPObject {
    constructor() : super() {}
    constructor(pointer: Pointer<out CPPObject>?) : super(pointer) {}

    @Field(0)
    protected fun nDevices(): Int {
        return io.getIntField(this, 0)
    }

    @Field(0)
    protected fun nDevices(nDevices: Int): DeviceList {
        io.setIntField(this, 0, nDevices)
        return this
    }

    // / C type : Device**
    @Field(1)
    protected fun devices(): Pointer<Pointer<Device>> {
        return io.getPointerField(this, 1)
    }

    // / C type : Device**
    @Field(1)
    protected fun devices(devices: Pointer<Pointer<Device>>?): DeviceList {
        io.setPointerField(this, 1, devices)
        return this
    }

    val numDevices: Int
        external get

    external fun getDevice(i: Int): Pointer<Device>
    fun asArrayList(): List<Device> {
        val devices: MutableList<Device> = ArrayList()
        for (i in 0 until numDevices) {
            devices.add(getDevice(i).get())
        }
        return devices
    }
}